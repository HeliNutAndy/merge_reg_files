package main;

import au.com.bytecode.opencsv.CSVReader;
import au.com.bytecode.opencsv.CSVWriter;

import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.net.MalformedURLException;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.List;
import java.util.Date;
import java.util.Calendar;

import jcifs.smb.NtlmPasswordAuthentication;
import jcifs.smb.SmbException;
import jcifs.smb.SmbFile;


public class CSVMergeMonthly {

	/**
	 * @param args
	 * @throws SmbException 
	 * @throws MalformedURLException 
	 */
	
	private static NtlmPasswordAuthentication authentication;
	
	public static void main(String[] args) {
		// TODO Auto-generated method stub
		
		Logging Log = new Logging();
		Log.writeToLogP(CSVMergeMonthly.class.getName(), "main", "Monthly merge started.");
		
		NetworkFileHelper helper = new NetworkFileHelper(Log);
		helper.Connection("smb://ha-vnas-1.harvardapp.com/shared/Andy Zaluski/", "harvardapp\\azaluski", "A2cbs2pm");
		
		
	    if (args.length == 0) {
	    	Log.writeToLogP(CSVMergeMonthly.class.getName(), "main", "Missing or incorrect arguments.");
			System.exit(0);
	    } else {
	        System.out.println(args[0]);
	        System.out.println(args[1]);
	    }

		
		Encryption test = new Encryption();
		
		String junk = test.encrypt("Password", 12);
		
		System.out.println("Encrypted password : " + junk);
		
		junk = test.decrypt("IZllphk]", 12);
		
		System.out.println("decrypted password : " + junk);
		

		try {
			
			if(!checkDirectory("smb://ha-vnas-1.harvardapp.com/shared/Andy Zaluski/JavaTest/")){
				createDir("smb://ha-vnas-1.harvardapp.com/shared/Andy Zaluski/JavaTest/");
			}
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		getNumDaysMonth(getPriorMonth());
	}
	
	public static int getNumDaysMonth(int month){
		
		Date dateFileStamp = new java.util.Date();
		//dateFileStamp.setDate(dateFileStamp.getDate());
		DateFormat formatDate = new SimpleDateFormat("yyyy-M-d");
		
		String date = formatDate.format(dateFileStamp);
		
		System.out.println("Formatted Date: " + date);
		
		String[] yearMonthDay;
		  
		/* delimiter */
		String delimiter = "-";
		/* given string will be split by the argument delimiter provided. */
		yearMonthDay = date.split(delimiter);
		
		Calendar calendar = Calendar.getInstance();

		calendar.set(Integer.parseInt(yearMonthDay[0]), Integer.parseInt(yearMonthDay[1]), Integer.parseInt(yearMonthDay[2]));
		int days = calendar.getActualMaximum(Calendar.DAY_OF_MONTH);
		System.out.println("Number of Days: " + days);
		  
		return days;
	}
	
	public static int getPriorMonth(){
		
		Date currentDate = new java.util.Date();
		
		//We require just the month
		DateFormat formatDate = new SimpleDateFormat("M");
		
		String date = formatDate.format(currentDate);
		
		int month = Integer.parseInt(date);
		
		if(month == 1){
			month = 12;
		}
		else{
			month = month - 1;			
		}
		
		System.out.println("Current month: " + date);
		System.out.println("Prior month: " + month);
		return month;
	}
	
	

}

